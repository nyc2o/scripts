#!/usr/bin/env bash

set -eu
set -o pipefail

readonly SELF="${BASH_SOURCE[0]}"
readonly BASE_SELF=$(basename "$SELF")

OPT_HELP=
OPT_DEBUG=
OPT_VERBOSE=
OPT_END=

error () { echo "Error: $@" >&2; exit 1; }

display_usage () {
  cat <<EOF
Usage: $BASE_SELF [OPTIONS]

Options:
-h, --help       Display this help message.
-d, --debug      Enable debug mode.
-v, --verbose    Enable verbose output.
-e, --end    End session.

Choose the following:
1) Hibernate
2) Suspend
3) Exit
EOF
  exit 0
}

hibernate_() {
  sudo systemctl hibernate
}

suspend_() {
  sudo systemctl suspend
}

display_end_session() {
    
  read -p "Choose an option (1-3) 
 1) Hibernate
 2) Suspend
 3) Exit
 â–º : " choice
  case "$choice" in
 
   1) hibernate_ ;;
   2) suspend_ ;;
   3) exit 0 ;;
   *) error "Invalid choice." ;; 
 esac
}

parse_arguments () {
  local valid_commands=(
    -h --help
    -d --debug
    -v --verbose
    -e --end
  )
  for arg in "$@"; do
   if [[ " ${valid_commands[*]} " =~ " $arg " ]]; then
    case "$arg" in
      -h|--help) OPT_HELP=1 ;;
      -d|--debug) OPT_DEBUG=1 ;;
      -v|--verbose) OPT_VERBOSE=1 ;;
      -e|--end) OPT_END=1;;
       *) ;;
    esac
  else
   error "Invalid command '$arg'. Please see '$BASE_SELF --help.'"
  fi
 done
}

process_options () {
  if [[ -n "$OPT_HELP" ]]; then
    display_usage
  fi
  
  if [[ -n "$OPT_END" ]]; then
    display_end_session
  fi
 
}

main () {
  parse_arguments "$@"
  process_options
}

main "$@"
